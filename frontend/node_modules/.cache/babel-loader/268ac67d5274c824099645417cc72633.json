{"ast":null,"code":"var _jsxFileName = \"/Users/yogns/Desktop/interview_game/frontend/src/components/game_interview.js\";\nimport React from \"react\";\nimport StartLog from \"./game_startLog\";\nimport FinishLog from \"./game_finishLog\";\nimport DamageLog from \"./game_damageLog\";\nimport QuestionLog from \"./game_questionLog\";\nimport AnswerLog from \"./game_answerLog\";\nimport AnswerList from \"./game_answerList\"; //props:interviewPhase=(0,1,2), gameParams\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Interview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gamePhase: 0,\n      chosenNumber: 0,\n      totalDamage: 0\n    };\n    this.addGamePhase = this.addGamePhase.bind(this);\n    this.giveDamage = this.giveDamage.bind(this);\n    this.calcDamage = this.calcDamage.bind(this);\n    this.getAnswer0 = this.getAnswer0.bind(this);\n    this.getAnswer1 = this.getAnswer1.bind(this);\n    this.getAnswer2 = this.getAnswer2.bind(this);\n    this.getAnswer3 = this.getAnswer3.bind(this);\n  }\n\n  addGamePhase() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1\n    });\n  }\n\n  giveDamage(damage) {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1,\n      totalDamage: this.state.totalDamage + damage\n    });\n  }\n\n  calcDamage(answerID) {\n    function getBetweenRandom() {\n      return Math.random() * (1.2 - 0.8) + 0.8;\n    }\n\n    switch (answerID) {\n      case 1:\n        return Math.floor(100 * getBetweenRandom() * 0.4);\n        break;\n\n      case 2:\n        return Math.floor(100 * getBetweenRandom() * 0.15);\n        break;\n\n      case 3:\n        return Math.floor(100 * getBetweenRandom() * 0.1);\n        break;\n\n      case 4:\n        return Math.floor(100 * getBetweenRandom() * 0.6);\n        break;\n\n      case 5:\n        return Math.floor(100 * getBetweenRandom() * 0.25);\n        break;\n\n      case 6:\n        return Math.floor(100 * getBetweenRandom() * 0.4);\n        break;\n\n      case 7:\n        return Math.floor(100 * getBetweenRandom() * 0.35);\n        break;\n\n      case 8:\n        return Math.floor(100 * getBetweenRandom() * 0.2);\n        break;\n\n      case 9:\n        return Math.floor(150 * getBetweenRandom() * 0.6);\n        break;\n\n      case 10:\n        return Math.floor(150 * getBetweenRandom() * 0.45);\n        break;\n\n      case 11:\n        return Math.floor(150 * getBetweenRandom() * 0.1);\n        break;\n\n      case 12:\n        return Math.floor(150 * getBetweenRandom() * 0.3);\n        break;\n\n      case 13:\n        return Math.floor(150 * getBetweenRandom() * 0.2);\n        break;\n\n      case 14:\n        return Math.floor(150 * getBetweenRandom() * 0.5);\n        break;\n\n      case 15:\n        return Math.floor(150 * getBetweenRandom() * 0.1);\n        break;\n\n      case 16:\n        return Math.floor(150 * getBetweenRandom() * 0.5);\n        break;\n\n      case 17:\n        return Math.floor(200 * getBetweenRandom() * 0.35);\n        break;\n\n      case 18:\n        return Math.floor(200 * getBetweenRandom() * 0.25);\n        break;\n\n      case 19:\n        return Math.floor(200 * getBetweenRandom() * 0.5);\n        break;\n\n      case 20:\n        return Math.floor(200 * getBetweenRandom() * 0.5);\n        break;\n\n      case 21:\n        return Math.floor(200 * getBetweenRandom() * 0.6);\n        break;\n\n      case 22:\n        return Math.floor(200 * getBetweenRandom() * 0.3);\n        break;\n\n      case 23:\n        return Math.floor(200 * getBetweenRandom() * 0.35);\n        break;\n\n      case 24:\n        return Math.floor(200 * getBetweenRandom() * 0.1);\n        break;\n    }\n  }\n\n  getAnswer0() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1,\n      chosenNumber: 0\n    });\n  }\n\n  getAnswer1() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1,\n      chosenNumber: 1\n    });\n  }\n\n  getAnswer2() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1,\n      chosenNumber: 2\n    });\n  }\n\n  getAnswer3() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1,\n      chosenNumber: 3\n    });\n  }\n\n  render() {\n    const CHARACTER = {\n      image_src: this.props.gameParams.characters.image_src[0],\n      name: this.props.gameParams.characters.name[0],\n      background: this.props.gameParams.characters.background[0],\n      skill: this.props.gameParams.characters.skill[0],\n      personality: this.props.gameParams.characters.personality[0]\n    };\n    const COMPANY = {\n      genre: this.props.gameParams.companies.genre[0],\n      name: this.props.gameParams.companies.name[0]\n    };\n    const MEMBER = {\n      image_src: this.props.gameParams.members.image_src[this.props.interviewPhase],\n      name: this.props.gameParams.members.name[this.props.interviewPhase],\n      HP: this.props.gameParams.members.HP[this.props.interviewPhase],\n      personality: this.props.gameParams.members.personality[this.props.interviewPhase],\n      position: this.props.gameParams.members.position[this.props.interviewPhase],\n      question_group: this.props.gameParams.members.question_group[this.props.interviewPhase]\n    };\n    let answerID, damage, isWan;\n\n    switch (this.state.gamePhase) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(StartLog, {\n          character: CHARACTER,\n          company: COMPANY,\n          member: MEMBER,\n          phase: this.props.interviewPhase,\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(QuestionLog, {\n          question: this.props.gameParams.questions.text[2 * this.props.interviewPhase],\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(AnswerList, {\n          phase: this.props.interviewPhase,\n          answers: this.props.gameParams.answers,\n          forChange0: this.getAnswer0,\n          forChange1: this.getAnswer1,\n          forChange2: this.getAnswer2,\n          forChange3: this.getAnswer3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 3:\n        answerID = this.props.gameParams.answers.id[4 * this.props.interviewPhase + this.state.chosenNumber];\n        return /*#__PURE__*/_jsxDEV(AnswerLog, {\n          answerID: answerID,\n          gameParams: this.props.gameParams,\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 4:\n        answerID = this.props.gameParams.answers.id[4 * this.props.interviewPhase + this.state.chosenNumber];\n        damage = this.calcDamage(answerID);\n        return /*#__PURE__*/_jsxDEV(DamageLog, {\n          damage: damage,\n          forChange: this.giveDamage(damage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(QuestionLog, {\n          question: this.props.gameParams.questions.text[2 * this.props.interviewPhase + 1],\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 6:\n        return /*#__PURE__*/_jsxDEV(AnswerList, {\n          phase: this.props.interviewPhase + 1,\n          answers: this.props.gameParams.answers,\n          forChange0: this.getAnswer0,\n          forChange1: this.getAnswer1,\n          forChange2: this.getAnswer2,\n          forChange3: this.getAnswer3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 7:\n        answerID = this.props.gameParams.answers.id[4 * (this.props.interviewPhase + 1) + this.state.chosenNumber];\n        return /*#__PURE__*/_jsxDEV(AnswerLog, {\n          answerID: answerID,\n          gameParams: this.props.gameParams,\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 8:\n        answerID = this.props.gameParams.answers.id[4 * (this.props.interviewPhase + 1) + this.state.chosenNumber];\n        damage = this.calcDamage(answerID);\n        return /*#__PURE__*/_jsxDEV(DamageLog, {\n          damage: damage,\n          forChange: this.giveDamage(damage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 9:\n        return /*#__PURE__*/_jsxDEV(FinishLog, {\n          isWan: isWan,\n          forChange: this.props.forChange,\n          isPassed: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 28\n        }, this);\n        break;\n    }\n  }\n\n}\n\nexport default Interview;","map":{"version":3,"sources":["/Users/yogns/Desktop/interview_game/frontend/src/components/game_interview.js"],"names":["React","StartLog","FinishLog","DamageLog","QuestionLog","AnswerLog","AnswerList","Interview","Component","constructor","props","state","gamePhase","chosenNumber","totalDamage","addGamePhase","bind","giveDamage","calcDamage","getAnswer0","getAnswer1","getAnswer2","getAnswer3","setState","damage","answerID","getBetweenRandom","Math","random","floor","render","CHARACTER","image_src","gameParams","characters","name","background","skill","personality","COMPANY","genre","companies","MEMBER","members","interviewPhase","HP","position","question_group","isWan","questions","text","answers","id","forChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport StartLog     from \"./game_startLog\";\nimport FinishLog    from \"./game_finishLog\";\nimport DamageLog    from \"./game_damageLog\";\nimport QuestionLog  from \"./game_questionLog\";\nimport AnswerLog    from \"./game_answerLog\";\nimport AnswerList   from \"./game_answerList\";\n\n\n//props:interviewPhase=(0,1,2), gameParams\nclass Interview extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {gamePhase:0, chosenNumber:0, totalDamage:0};\n        this.addGamePhase         = this.addGamePhase.bind(this);\n        this.giveDamage   = this.giveDamage.bind(this);\n        this.calcDamage = this.calcDamage.bind(this);\n        this.getAnswer0 = this.getAnswer0.bind(this);\n        this.getAnswer1 = this.getAnswer1.bind(this);\n        this.getAnswer2 = this.getAnswer2.bind(this);\n        this.getAnswer3 = this.getAnswer3.bind(this);\n    }\n\n\n    addGamePhase(){\n        this.setState({gamePhase:this.state.gamePhase+1});\n    }\n\n    giveDamage(damage){\n        this.setState({\n            gamePhase:this.state.gamePhase+1,\n            totalDamage:this.state.totalDamage+damage\n        });\n    }\n\n    calcDamage(answerID){\n        function getBetweenRandom(){\n            return Math.random()*(1.2-0.8)+0.8;\n        }\n\n        switch(answerID){\n            case 1: return Math.floor(100*getBetweenRandom()*0.4); break;\n            case 2: return Math.floor(100*getBetweenRandom()*0.15); break;\n            case 3: return Math.floor(100*getBetweenRandom()*0.1); break;\n            case 4: return Math.floor(100*getBetweenRandom()*0.6); break;\n\n            case 5: return Math.floor(100*getBetweenRandom()*0.25); break;\n            case 6: return Math.floor(100*getBetweenRandom()*0.4); break;\n            case 7: return Math.floor(100*getBetweenRandom()*0.35); break;\n            case 8: return Math.floor(100*getBetweenRandom()*0.2); break;\n\n            case 9: return Math.floor(150*getBetweenRandom()*0.6); break;\n            case 10: return Math.floor(150*getBetweenRandom()*0.45); break;\n            case 11: return Math.floor(150*getBetweenRandom()*0.1); break;\n            case 12: return Math.floor(150*getBetweenRandom()*0.3); break;\n\n            case 13: return Math.floor(150*getBetweenRandom()*0.2); break;\n            case 14: return Math.floor(150*getBetweenRandom()*0.5); break;\n            case 15: return Math.floor(150*getBetweenRandom()*0.1); break;\n            case 16: return Math.floor(150*getBetweenRandom()*0.5); break;\n\n            case 17: return Math.floor(200*getBetweenRandom()*0.35); break;\n            case 18: return Math.floor(200*getBetweenRandom()*0.25); break;\n            case 19: return Math.floor(200*getBetweenRandom()*0.5); break;\n            case 20: return Math.floor(200*getBetweenRandom()*0.5); break;\n\n            case 21: return Math.floor(200*getBetweenRandom()*0.6); break;\n            case 22: return Math.floor(200*getBetweenRandom()*0.3); break;\n            case 23: return Math.floor(200*getBetweenRandom()*0.35); break;\n            case 24: return Math.floor(200*getBetweenRandom()*0.1); break;\n        }\n    }\n\n    getAnswer0(){\n        this.setState({gamePhase:this.state.gamePhase+1, chosenNumber:0});\n    }\n    getAnswer1(){\n        this.setState({gamePhase:this.state.gamePhase+1, chosenNumber:1});\n    }\n    getAnswer2(){\n        this.setState({gamePhase:this.state.gamePhase+1, chosenNumber:2});\n    }\n    getAnswer3(){\n        this.setState({gamePhase:this.state.gamePhase+1, chosenNumber:3});\n    }\n\n\n\n\n\n    render(){\n        const CHARACTER = {\n            image_src:this.props.gameParams.characters.image_src[0],\n            name:this.props.gameParams.characters.name[0],\n            background:this.props.gameParams.characters.background[0],\n            skill:this.props.gameParams.characters.skill[0],\n            personality:this.props.gameParams.characters.personality[0]\n        }\n\n        const COMPANY = {\n            genre:this.props.gameParams.companies.genre[0],\n            name:this.props.gameParams.companies.name[0]\n        }\n\n        const MEMBER = {\n            image_src:this.props.gameParams.members.image_src[this.props.interviewPhase],\n            name:this.props.gameParams.members.name[this.props.interviewPhase],\n            HP:this.props.gameParams.members.HP[this.props.interviewPhase],\n            personality:this.props.gameParams.members.personality[this.props.interviewPhase],\n            position:this.props.gameParams.members.position[this.props.interviewPhase],\n            question_group:this.props.gameParams.members.question_group[this.props.interviewPhase]\n        }\n\n        let answerID, damage, isWan;\n\n\n\n\n        switch(this.state.gamePhase){\n            \n\n            case 0: return <StartLog     character={CHARACTER} company={COMPANY} member={MEMBER} phase={this.props.interviewPhase} forChange={this.addGamePhase}/>;\n                    break;\n            case 1: return <QuestionLog　question={this.props.gameParams.questions.text[2*this.props.interviewPhase]} forChange={this.addGamePhase}/>; \n                    break;\n            case 2: return <AnswerList   phase={this.props.interviewPhase} answers={this.props.gameParams.answers} forChange0={this.getAnswer0} forChange1={this.getAnswer1} forChange2={this.getAnswer2} forChange3={this.getAnswer3}/>;\n                    break;\n\n            case 3: answerID = this.props.gameParams.answers.id[4*this.props.interviewPhase+this.state.chosenNumber];\n                    return <AnswerLog    answerID={answerID} gameParams={this.props.gameParams} forChange={this.addGamePhase}/>; \n                    break;\n            case 4: answerID = this.props.gameParams.answers.id[4*this.props.interviewPhase+this.state.chosenNumber];\n                    damage = this.calcDamage(answerID);\n                    return <DamageLog    damage={damage} forChange={this.giveDamage(damage)}/>; \n                    break;\n            case 5: return <QuestionLog　question={this.props.gameParams.questions.text[2*this.props.interviewPhase+1]} forChange={this.addGamePhase}/>; \n                    break;\n            case 6: return <AnswerList   phase={this.props.interviewPhase+1} answers={this.props.gameParams.answers} forChange0={this.getAnswer0} forChange1={this.getAnswer1} forChange2={this.getAnswer2} forChange3={this.getAnswer3}/>; \n                    break;\n            case 7: answerID = this.props.gameParams.answers.id[4*(this.props.interviewPhase+1)+this.state.chosenNumber];\n                    return <AnswerLog    answerID={answerID} gameParams={this.props.gameParams} forChange={this.addGamePhase}/>; \n                    break;\n            case 8: answerID = this.props.gameParams.answers.id[4*(this.props.interviewPhase+1)+this.state.chosenNumber];\n                    damage = this.calcDamage(answerID);\n                    return <DamageLog    damage={damage} forChange={this.giveDamage(damage)}/>; \n                    break;\n            case 9: return <FinishLog    isWan={isWan} forChange={this.props.forChange}　isPassed={0}/>; \n                    break;\n        }\n    }\n}\n\nexport default Interview;"]},"metadata":{},"sourceType":"module"}