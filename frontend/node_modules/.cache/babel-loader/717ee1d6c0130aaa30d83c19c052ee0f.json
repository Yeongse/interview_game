{"ast":null,"code":"var _jsxFileName = \"/Users/yogns/Desktop/interview_game/frontend/src/components/game_interview.js\";\nimport React from \"react\";\nimport StartLog from \"./game_startLog\";\nimport FinishLog from \"./game_finishLog\";\nimport DamageLog from \"./game_damageLog\";\nimport QuestionLog from \"./game_questionLog\";\nimport AnswerLog from \"./game_answerLog\";\nimport AnswerList from \"./game_answerList\"; //props:interviewPhase=(0,1,2), gameParams\n//this.props.forChangeTrue:面接落ちた時 forChangeFalse:面接通過した時\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Interview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gamePhase: 0,\n      chosenNumber: 0,\n      totalDamage: 200\n    };\n    this.addGamePhase = this.addGamePhase.bind(this);\n    this.getAnswer0 = this.getAnswer0.bind(this);\n    this.getAnswer1 = this.getAnswer1.bind(this);\n    this.getAnswer2 = this.getAnswer2.bind(this);\n    this.getAnswer3 = this.getAnswer3.bind(this);\n  }\n\n  addGamePhase() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1\n    });\n  }\n\n  getAnswer0() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1,\n      chosenNumber: 0\n    });\n  }\n\n  getAnswer1() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1,\n      chosenNumber: 1\n    });\n  }\n\n  getAnswer2() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1,\n      chosenNumber: 2\n    });\n  }\n\n  getAnswer3() {\n    this.setState({\n      gamePhase: this.state.gamePhase + 1,\n      chosenNumber: 3\n    });\n  }\n\n  makeInterview() {\n    const CHARACTER = {\n      image_src: this.props.gameParams.characters.image_src[0],\n      name: this.props.gameParams.characters.name[0],\n      background: this.props.gameParams.characters.background[0],\n      skill: this.props.gameParams.characters.skill[0],\n      personality: this.props.gameParams.characters.personality[0]\n    };\n    const COMPANY = {\n      genre: this.props.gameParams.companies.genre[0],\n      name: this.props.gameParams.companies.name[0]\n    };\n    const MEMBER = {\n      image_src: this.props.gameParams.members.image_src[this.props.interviewPhase],\n      name: this.props.gameParams.members.name[this.props.interviewPhase],\n      HP: this.props.gameParams.members.HP[this.props.interviewPhase],\n      personality: this.props.gameParams.members.personality[this.props.interviewPhase],\n      position: this.props.gameParams.members.position[this.props.interviewPhase],\n      question_group: this.props.gameParams.members.question_group[this.props.interviewPhase]\n    };\n    let answerID, damage, isLose;\n\n    function calcDamage(answerID) {\n      function getBetweenRandom() {\n        return Math.random() * (1.2 - 0.8) + 0.8;\n      }\n\n      switch (answerID) {\n        case 1:\n          return Math.floor(100 * getBetweenRandom() * 0.4);\n          break;\n\n        case 2:\n          return Math.floor(100 * getBetweenRandom() * 0.15);\n          break;\n\n        case 3:\n          return Math.floor(100 * getBetweenRandom() * 0.1);\n          break;\n\n        case 4:\n          return Math.floor(100 * getBetweenRandom() * 0.6);\n          break;\n\n        case 5:\n          return Math.floor(100 * getBetweenRandom() * 0.25);\n          break;\n\n        case 6:\n          return Math.floor(100 * getBetweenRandom() * 0.6);\n          break;\n\n        case 7:\n          return Math.floor(100 * getBetweenRandom() * 0.35);\n          break;\n\n        case 8:\n          return Math.floor(100 * getBetweenRandom() * 0.2);\n          break;\n\n        case 9:\n          return Math.floor(150 * getBetweenRandom() * 0.6);\n          break;\n\n        case 10:\n          return Math.floor(150 * getBetweenRandom() * 0.45);\n          break;\n\n        case 11:\n          return Math.floor(150 * getBetweenRandom() * 0.1);\n          break;\n\n        case 12:\n          return Math.floor(150 * getBetweenRandom() * 0.3);\n          break;\n\n        case 13:\n          return Math.floor(150 * getBetweenRandom() * 0.2);\n          break;\n\n        case 14:\n          return Math.floor(150 * getBetweenRandom() * 0.5);\n          break;\n\n        case 15:\n          return Math.floor(150 * getBetweenRandom() * 0.1);\n          break;\n\n        case 16:\n          return Math.floor(150 * getBetweenRandom() * 0.5);\n          break;\n\n        case 17:\n          return Math.floor(200 * getBetweenRandom() * 0.35);\n          break;\n\n        case 18:\n          return Math.floor(200 * getBetweenRandom() * 0.25);\n          break;\n\n        case 19:\n          return Math.floor(200 * getBetweenRandom() * 0.5);\n          break;\n\n        case 20:\n          return Math.floor(200 * getBetweenRandom() * 0.5);\n          break;\n\n        case 21:\n          return Math.floor(200 * getBetweenRandom() * 0.6);\n          break;\n\n        case 22:\n          return Math.floor(200 * getBetweenRandom() * 0.3);\n          break;\n\n        case 23:\n          return Math.floor(200 * getBetweenRandom() * 0.35);\n          break;\n\n        case 24:\n          return Math.floor(200 * getBetweenRandom() * 0.1);\n          break;\n      }\n\n      ;\n    }\n\n    switch (this.state.gamePhase % 10) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(StartLog, {\n          character: CHARACTER,\n          company: COMPANY,\n          member: MEMBER,\n          phase: this.props.interviewPhase,\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(QuestionLog, {\n          question: this.props.gameParams.questions.text[2 * this.props.interviewPhase],\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(AnswerList, {\n          phase: this.props.interviewPhase,\n          answers: this.props.gameParams.answers,\n          forChange0: this.getAnswer0,\n          forChange1: this.getAnswer1,\n          forChange2: this.getAnswer2,\n          forChange3: this.getAnswer3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 3:\n        answerID = this.props.gameParams.answers.id[4 * this.props.interviewPhase + this.state.chosenNumber];\n        return /*#__PURE__*/_jsxDEV(AnswerLog, {\n          answerID: answerID,\n          gameParams: this.props.gameParams,\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 4:\n        answerID = this.props.gameParams.answers.id[4 * this.props.interviewPhase + this.state.chosenNumber];\n        damage = calcDamage(answerID);\n        return /*#__PURE__*/_jsxDEV(DamageLog, {\n          damage: damage,\n          forChange: () => this.setState({\n            gamePhase: this.state.gamePhase + 1,\n            totalDamage: this.state.totalDamage + damage\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(QuestionLog, {\n          question: this.props.gameParams.questions.text[2 * this.props.interviewPhase + 1],\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 6:\n        return /*#__PURE__*/_jsxDEV(AnswerList, {\n          phase: this.props.interviewPhase + 1,\n          answers: this.props.gameParams.answers,\n          forChange0: this.getAnswer0,\n          forChange1: this.getAnswer1,\n          forChange2: this.getAnswer2,\n          forChange3: this.getAnswer3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 7:\n        answerID = this.props.gameParams.answers.id[4 * (this.props.interviewPhase + 1) + this.state.chosenNumber];\n        return /*#__PURE__*/_jsxDEV(AnswerLog, {\n          answerID: answerID,\n          gameParams: this.props.gameParams,\n          forChange: this.addGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 8:\n        answerID = this.props.gameParams.answers.id[4 * (this.props.interviewPhase + 1) + this.state.chosenNumber];\n        damage = calcDamage(answerID);\n        return /*#__PURE__*/_jsxDEV(DamageLog, {\n          damage: damage,\n          forChange: () => this.setState({\n            gamePhase: this.state.gamePhase + 1,\n            totalDamage: this.state.totalDamage + damage\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 28\n        }, this);\n        break;\n\n      case 9:\n        isLose = this.state.totalDamage < MEMBER.HP; //console.log(this.state.totalDamage-MEMBER.HP);\n\n        return /*#__PURE__*/_jsxDEV(FinishLog, {\n          isLose: isLose,\n          forChangeTrue: this.props.forChangeTrue,\n          forChangeFalse: this.props.forChangeFalse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 28\n        }, this);\n        break;\n    }\n  }\n\n  render() {\n    console.log(this.state.gamePhase);\n    return this.makeInterview();\n  }\n\n}\n\nexport default Interview;","map":{"version":3,"sources":["/Users/yogns/Desktop/interview_game/frontend/src/components/game_interview.js"],"names":["React","StartLog","FinishLog","DamageLog","QuestionLog","AnswerLog","AnswerList","Interview","Component","constructor","props","state","gamePhase","chosenNumber","totalDamage","addGamePhase","bind","getAnswer0","getAnswer1","getAnswer2","getAnswer3","setState","makeInterview","CHARACTER","image_src","gameParams","characters","name","background","skill","personality","COMPANY","genre","companies","MEMBER","members","interviewPhase","HP","position","question_group","answerID","damage","isLose","calcDamage","getBetweenRandom","Math","random","floor","questions","text","answers","id","forChangeTrue","forChangeFalse","render","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport StartLog     from \"./game_startLog\";\nimport FinishLog    from \"./game_finishLog\";\nimport DamageLog    from \"./game_damageLog\";\nimport QuestionLog  from \"./game_questionLog\";\nimport AnswerLog    from \"./game_answerLog\";\nimport AnswerList   from \"./game_answerList\";\n\n\n//props:interviewPhase=(0,1,2), gameParams\n//this.props.forChangeTrue:面接落ちた時 forChangeFalse:面接通過した時\nclass Interview extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {gamePhase:0, chosenNumber:0,totalDamage:200};\n        this.addGamePhase = this.addGamePhase.bind(this);\n        this.getAnswer0   = this.getAnswer0.bind(this);\n        this.getAnswer1   = this.getAnswer1.bind(this);\n        this.getAnswer2   = this.getAnswer2.bind(this);\n        this.getAnswer3   = this.getAnswer3.bind(this);\n    }\n\n\n    addGamePhase(){\n        this.setState({gamePhase:this.state.gamePhase+1});\n    }\n    getAnswer0(){\n        this.setState({gamePhase:this.state.gamePhase+1, chosenNumber:0});\n    }\n    getAnswer1(){\n        this.setState({gamePhase:this.state.gamePhase+1, chosenNumber:1});\n    }\n    getAnswer2(){\n        this.setState({gamePhase:this.state.gamePhase+1, chosenNumber:2});\n    }\n    getAnswer3(){\n        this.setState({gamePhase:this.state.gamePhase+1, chosenNumber:3});\n    }\n    \n    makeInterview(){\n        const CHARACTER = {\n            image_src:this.props.gameParams.characters.image_src[0],\n            name:this.props.gameParams.characters.name[0],\n            background:this.props.gameParams.characters.background[0],\n            skill:this.props.gameParams.characters.skill[0],\n            personality:this.props.gameParams.characters.personality[0]\n        }\n\n        const COMPANY = {\n            genre:this.props.gameParams.companies.genre[0],\n            name:this.props.gameParams.companies.name[0]\n        }\n\n        const MEMBER = {\n            image_src:this.props.gameParams.members.image_src[this.props.interviewPhase],\n            name:this.props.gameParams.members.name[this.props.interviewPhase],\n            HP:this.props.gameParams.members.HP[this.props.interviewPhase],\n            personality:this.props.gameParams.members.personality[this.props.interviewPhase],\n            position:this.props.gameParams.members.position[this.props.interviewPhase],\n            question_group:this.props.gameParams.members.question_group[this.props.interviewPhase]\n        }\n        let answerID, damage, isLose;\n\n        function calcDamage(answerID){\n            function getBetweenRandom(){\n                return Math.random()*(1.2-0.8)+0.8;\n            }\n    \n            switch(answerID){\n                case 1:  return Math.floor(100*getBetweenRandom()*0.4);  break;\n                case 2:  return Math.floor(100*getBetweenRandom()*0.15); break;\n                case 3:  return Math.floor(100*getBetweenRandom()*0.1);  break;\n                case 4:  return Math.floor(100*getBetweenRandom()*0.6);  break;\n                case 5:  return Math.floor(100*getBetweenRandom()*0.25); break;\n                case 6:  return Math.floor(100*getBetweenRandom()*0.6);  break;\n                case 7:  return Math.floor(100*getBetweenRandom()*0.35); break;\n                case 8:  return Math.floor(100*getBetweenRandom()*0.2);  break;\n                case 9:  return Math.floor(150*getBetweenRandom()*0.6);  break;\n                case 10: return Math.floor(150*getBetweenRandom()*0.45); break;\n                case 11: return Math.floor(150*getBetweenRandom()*0.1);  break;\n                case 12: return Math.floor(150*getBetweenRandom()*0.3);  break;\n                case 13: return Math.floor(150*getBetweenRandom()*0.2);  break;\n                case 14: return Math.floor(150*getBetweenRandom()*0.5);  break;\n                case 15: return Math.floor(150*getBetweenRandom()*0.1);  break;\n                case 16: return Math.floor(150*getBetweenRandom()*0.5);  break;\n                case 17: return Math.floor(200*getBetweenRandom()*0.35); break;\n                case 18: return Math.floor(200*getBetweenRandom()*0.25); break;\n                case 19: return Math.floor(200*getBetweenRandom()*0.5);  break;\n                case 20: return Math.floor(200*getBetweenRandom()*0.5);  break;\n                case 21: return Math.floor(200*getBetweenRandom()*0.6);  break;\n                case 22: return Math.floor(200*getBetweenRandom()*0.3);  break;\n                case 23: return Math.floor(200*getBetweenRandom()*0.35); break;\n                case 24: return Math.floor(200*getBetweenRandom()*0.1);  break;\n            };\n        }\n\n        switch(this.state.gamePhase%10){\n            case 0: return <StartLog character={CHARACTER} company={COMPANY} member={MEMBER} phase={this.props.interviewPhase} forChange={this.addGamePhase}/>;\n                    break;\n            case 1: return <QuestionLog question={this.props.gameParams.questions.text[2*this.props.interviewPhase]} forChange={this.addGamePhase}/>; \n                    break;\n            case 2: return <AnswerList phase={this.props.interviewPhase} answers={this.props.gameParams.answers} forChange0={this.getAnswer0} forChange1={this.getAnswer1} forChange2={this.getAnswer2} forChange3={this.getAnswer3}/>;\n                    break;\n            case 3: answerID = this.props.gameParams.answers.id[4*this.props.interviewPhase+this.state.chosenNumber];\n                    return <AnswerLog answerID={answerID} gameParams={this.props.gameParams} forChange={this.addGamePhase}/>; \n                    break;\n            case 4: answerID = this.props.gameParams.answers.id[4*this.props.interviewPhase+this.state.chosenNumber];\n                    damage   = calcDamage(answerID);\n                    return <DamageLog damage={damage} forChange={()=>this.setState({gamePhase:this.state.gamePhase+1,totalDamage:this.state.totalDamage+damage})}/>; \n                    break;\n            case 5: return <QuestionLog　question={this.props.gameParams.questions.text[2*this.props.interviewPhase+1]} forChange={this.addGamePhase}/>; \n                    break;\n            case 6: return <AnswerList phase={this.props.interviewPhase+1} answers={this.props.gameParams.answers} forChange0={this.getAnswer0} forChange1={this.getAnswer1} forChange2={this.getAnswer2} forChange3={this.getAnswer3}/>; \n                    break;\n            case 7: answerID = this.props.gameParams.answers.id[4*(this.props.interviewPhase+1)+this.state.chosenNumber];\n                    return <AnswerLog answerID={answerID} gameParams={this.props.gameParams} forChange={this.addGamePhase}/>; \n                    break;\n            case 8: answerID = this.props.gameParams.answers.id[4*(this.props.interviewPhase+1)+this.state.chosenNumber];\n                    damage   = calcDamage(answerID);\n                    return <DamageLog damage={damage} forChange={()=>this.setState({gamePhase:this.state.gamePhase+1,totalDamage:this.state.totalDamage+damage})}/>; \n                    break;\n            case 9: isLose = this.state.totalDamage < MEMBER.HP\n                    //console.log(this.state.totalDamage-MEMBER.HP);\n                    return <FinishLog isLose={isLose} forChangeTrue={this.props.forChangeTrue}　forChangeFalse={this.props.forChangeFalse}/>; \n                    break;\n        }\n    }\n\n\n\n\n\n    render(){\n        console.log(this.state.gamePhase);\n        return this.makeInterview();\n    }\n}\n\nexport default Interview;"]},"metadata":{},"sourceType":"module"}