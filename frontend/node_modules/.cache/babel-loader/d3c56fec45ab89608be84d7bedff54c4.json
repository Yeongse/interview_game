{"ast":null,"code":"var _jsxFileName = \"/Users/yogns/Desktop/interview_game/frontend/src/components/Game.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport Image from \"./game_image\";\nimport Frame from \"./frame\";\nimport FirstMessage from \"./game_firstMessage\";\nimport FinalMessage from \"./game_finalMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalPhase: 0,\n      gamePhase: 0,\n      gameParams: {}\n    };\n    ;\n    this.addTotalPhase = this.addTotalPhase.bind(this);\n    this.resetGamePhase = this.resetGamePhase.bind(this);\n    this.finishGame = this.finishGame.bind(this);\n    this.componentController = this.componentController.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/game\").then(res => {\n      const fetched_data = res.data;\n      this.setState({\n        gameParams: fetched_data\n      });\n    });\n  }\n\n  addTotalPhase() {\n    this.setState({\n      totalPhase: this.state.totalPhase + 1\n    });\n  }\n\n  resetGamePhase() {\n    this.setState({\n      gamePhase: 0\n    });\n  }\n\n  finishGame() {\n    this.setState({\n      totalPhase: 0\n    });\n  }\n\n  componentController() {\n    if (this.state.gameParams.characters !== undefined) {\n      const CHARACTER = {\n        image_src: this.state.gameParams.characters.image_src[0],\n        name: this.state.gameParams.characters.name[0],\n        background: this.state.gameParams.characters.background[0],\n        skill: this.state.gameParams.characters.skill[0],\n        personality: this.state.gameParams.characters.personality[0]\n      };\n      const COMPANY = {\n        genre: this.state.gameParams.companies.genre[0],\n        name: this.state.gameParams.companies.name[0]\n      };\n\n      if (this.state.totalPhase === 0) {\n        return /*#__PURE__*/_jsxDEV(FirstMessage, {\n          character: CHARACTER,\n          company: COMPANY,\n          forChange: this.addTotalPhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(FinishLog, {\n          forChange: this.resetGamePhase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Frame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"variable\",\n        children: this.componentController()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"top_menu\",\n        children: \"\\u30DB\\u30FC\\u30E0\\u306B\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/yogns/Desktop/interview_game/frontend/src/components/Game.js"],"names":["React","axios","Link","Image","Frame","FirstMessage","FinalMessage","Game","Component","constructor","props","state","totalPhase","gamePhase","gameParams","addTotalPhase","bind","resetGamePhase","finishGame","componentController","componentDidMount","get","then","res","fetched_data","data","setState","characters","undefined","CHARACTER","image_src","name","background","skill","personality","COMPANY","genre","companies","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,KAAP,MAAyB,cAAzB;AACA,OAAOC,KAAP,MAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;;AAIA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAC,CAAZ;AAAeC,MAAAA,SAAS,EAAC,CAAzB;AAA4BC,MAAAA,UAAU,EAAC;AAAvC,KAAb;AAAwD;AACxD,SAAKC,aAAL,GAAsB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAtB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AAEDI,EAAAA,iBAAiB,GAAE;AACfnB,IAAAA,KAAK,CAACoB,GAAN,CAAU,4BAAV,EAAwCC,IAAxC,CAA6CC,GAAG,IAAI;AAChD,YAAMC,YAAY,GAAGD,GAAG,CAACE,IAAzB;AACA,WAAKC,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAACU;AAAZ,OAAd;AACH,KAHD;AAIH;;AAEDT,EAAAA,aAAa,GAAE;AACX,SAAKW,QAAL,CAAc;AAACd,MAAAA,UAAU,EAAC,KAAKD,KAAL,CAAWC,UAAX,GAAsB;AAAlC,KAAd;AACH;;AAGDK,EAAAA,cAAc,GAAE;AACZ,SAAKS,QAAL,CAAc;AAACb,MAAAA,SAAS,EAAC;AAAX,KAAd;AACH;;AAEDK,EAAAA,UAAU,GAAE;AACR,SAAKQ,QAAL,CAAc;AAACd,MAAAA,UAAU,EAAC;AAAZ,KAAd;AACH;;AAEDO,EAAAA,mBAAmB,GAAE;AACjB,QAAI,KAAKR,KAAL,CAAWG,UAAX,CAAsBa,UAAtB,KAAqCC,SAAzC,EAAmD;AAC/C,YAAMC,SAAS,GAAG;AACdC,QAAAA,SAAS,EAAC,KAAKnB,KAAL,CAAWG,UAAX,CAAsBa,UAAtB,CAAiCG,SAAjC,CAA2C,CAA3C,CADI;AAEdC,QAAAA,IAAI,EAAC,KAAKpB,KAAL,CAAWG,UAAX,CAAsBa,UAAtB,CAAiCI,IAAjC,CAAsC,CAAtC,CAFS;AAGdC,QAAAA,UAAU,EAAC,KAAKrB,KAAL,CAAWG,UAAX,CAAsBa,UAAtB,CAAiCK,UAAjC,CAA4C,CAA5C,CAHG;AAIdC,QAAAA,KAAK,EAAC,KAAKtB,KAAL,CAAWG,UAAX,CAAsBa,UAAtB,CAAiCM,KAAjC,CAAuC,CAAvC,CAJQ;AAKdC,QAAAA,WAAW,EAAC,KAAKvB,KAAL,CAAWG,UAAX,CAAsBa,UAAtB,CAAiCO,WAAjC,CAA6C,CAA7C;AALE,OAAlB;AAQA,YAAMC,OAAO,GAAG;AACZC,QAAAA,KAAK,EAAC,KAAKzB,KAAL,CAAWG,UAAX,CAAsBuB,SAAtB,CAAgCD,KAAhC,CAAsC,CAAtC,CADM;AAEZL,QAAAA,IAAI,EAAC,KAAKpB,KAAL,CAAWG,UAAX,CAAsBuB,SAAtB,CAAgCN,IAAhC,CAAqC,CAArC;AAFO,OAAhB;;AAMA,UAAG,KAAKpB,KAAL,CAAWC,UAAX,KAA0B,CAA7B,EAA+B;AAC3B,4BAAO,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEiB,SAAzB;AAAoC,UAAA,OAAO,EAAEM,OAA7C;AAAsD,UAAA,SAAS,EAAE,KAAKpB;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAGI;AACA,4BAAO,QAAC,SAAD;AAAW,UAAA,SAAS,EAAE,KAAKE;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACC;AACJ;AAEJ;;AAGLqB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACK,KAAKnB,mBAAL;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AApE6B;;AAwElC,eAAeZ,IAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom'\n\nimport Image        from \"./game_image\";\nimport Frame        from \"./frame\";\nimport FirstMessage from \"./game_firstMessage\";\nimport FinalMessage from \"./game_finalMessage\";\n\n\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {totalPhase:0, gamePhase:0, gameParams:{}};;\n        this.addTotalPhase  = this.addTotalPhase.bind(this);\n        this.resetGamePhase = this.resetGamePhase.bind(this);\n        this.finishGame = this.finishGame.bind(this);\n        this.componentController = this.componentController.bind(this);\n    }\n\n    componentDidMount(){\n        axios.get(\"http://localhost:5000/game\").then(res => {\n            const fetched_data = res.data;\n            this.setState({gameParams:fetched_data});\n        })\n    }\n\n    addTotalPhase(){\n        this.setState({totalPhase:this.state.totalPhase+1});\n    }\n\n\n    resetGamePhase(){\n        this.setState({gamePhase:0});\n    }\n\n    finishGame(){\n        this.setState({totalPhase:0})\n    }\n\n    componentController(){\n        if (this.state.gameParams.characters !== undefined){\n            const CHARACTER = {\n                image_src:this.state.gameParams.characters.image_src[0],\n                name:this.state.gameParams.characters.name[0],\n                background:this.state.gameParams.characters.background[0],\n                skill:this.state.gameParams.characters.skill[0],\n                personality:this.state.gameParams.characters.personality[0]\n            }\n    \n            const COMPANY = {\n                genre:this.state.gameParams.companies.genre[0],\n                name:this.state.gameParams.companies.name[0]\n            }\n\n\n            if(this.state.totalPhase === 0){\n                return <FirstMessage　character={CHARACTER} company={COMPANY} forChange={this.addTotalPhase}/>;\n            }\n            else{\n                return <FinishLog forChange={this.resetGamePhase}/>\n                }\n            }\n            \n        }\n    \n\n    render(){\n        return(\n            <div>\n                <Frame />\n                <Image />\n                <div className=\"variable\">\n                    {this.componentController()}\n                </div>\n                <Link to=\"/\" className=\"top_menu\">ホームに戻る</Link>\n            </div>\n        )\n    }\n}\n\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}